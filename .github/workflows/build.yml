name: Build

on:
  push:
    branches-ignore:
      - release
  pull_request:
    branches-ignore:
      - release

jobs:
  build-macos:
    runs-on: macOS-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: /Users/runner/Library/Caches/ccache
        key: ccache-macos-build-${{ github.sha }}
        restore-keys: ccache-macos-build-
    - name: Install Xolentum dependencies
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install boost hidapi zmq libpgm miniupnpc ldns expat libunwind-headers protobuf ccache
    - name: Build
      run: |
        ccache --max-size=150M
        make -j3

  build-windows:
    runs-on: windows-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: C:\Users\runneradmin\.ccache-temp
      CCACHE_DIR: C:\Users\runneradmin\.ccache
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\.ccache
        key: ccache-windows-build-${{ github.sha }}
        restore-keys: ccache-windows-build-
    - name: Install Xolentum dependencies
      uses: eine/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-ccache mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-protobuf-c mingw-w64-x86_64-libusb git
    - name: Build
      run: |
        ccache --max-size=150M
        make release-static-win64 -j2

  build-ubuntu:
    runs-on: ubuntu-18.04
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-ubuntu-build-${{ github.sha }}
        restore-keys: ccache-ubuntu-build-
    - name: Remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: Set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: Update apt
      run: sudo apt update
    - name: Install ZMQ dependencies
      run: sudo apt -y install build-essential cmake libtool autoconf pkg-config m4 automake
    - uses: actions/checkout@v2
      with:
        repository: zeromq/libzmq
        path: ./libzmq
    - name: Compile ZMQ
      working-directory: ./libzmq
      run: |
          ./autogen.sh
          ./configure
          ccache --max-size=150M
          make -j3
          sudo make install
    - name: Install Xolentum dependencies
      run: sudo apt -y install libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev libssl-dev libsodium-dev libhidapi-dev libusb-1.0-0-dev libpgm-dev libprotobuf-dev protobuf-compiler ccache
    - name: Build
      run: |
        ccache --max-size=150M
        make -j3

  libwallet-ubuntu:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-ubuntu-libwallet-${{ github.sha }}
        restore-keys: ccache-ubuntu-libwallet-
    - name: Remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: Set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: Update apt
      run: sudo apt update
    - name: Install Xolentum dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev libprotobuf-dev protobuf-compiler ccache
    - name: Build
      run: |
        ccache --max-size=150M
        cmake -DBUILD_GUI_DEPS=ON
        make -j3

  test-ubuntu:
    needs: build-ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: Set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: Update apt
      run: sudo apt update
    - name: Install Xolentum dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev libprotobuf-dev protobuf-compiler
    - name: Install requests
      run: pip install requests
    - name: Tests
      env:
        CTEST_OUTPUT_ON_FAILURE: ON
      run: make release-test -j3
